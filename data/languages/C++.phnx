############
### C++ language support
############

return Map(
	type: "CompiledToMachineCode",
	sourceExtensions: [".cpp", ".cxx", ".c++", ".cc"],
	extraExtensions: [".h", ".hxx", ".hpp", ".h++"],
	compilerEnviron: "CXX",
	preprocessor: true,
	test: "int main(){\n#ifndef __cplusplus\n#error Not Cpp\n#endif\nreturn 0;}",
	compilers: Map(
		"Clang": Map(
			binary: "clang++",
			detect: Map(arguments: "--version", contains: ["clang", "version"]),
			defaultFlags: "",
			compile: "-c ",
			output: "-o ",
			definition: "-D",
			include: "-I"
		),
		"GNU": Map(
			binary: "g++",
			detect: Map(arguments: "--version", contains: ["g++", "Free Software Foundation"]),
			defaultFlags: "",
			compile: "-c ",
			output: "-o ",
			definition: "-D",
			include: "-I"
		),
		"MSVC": Map(
			binary: "cl",
			detect: Map(arguments: "", contains: ["Microsoft (R) C/C++ Optimizing Compiler"]),
			defaultFlags: "/nologo /TP /GR /EHsc",
			compile: "/c ",
			output: "/Fo",
			definition: "/D",
			include: "/I"
		)
	),
	standardsModes: Map(
		"98": Map(
			test: "int main(){\n#if __cplusplus != 199711L\n#error Not Cpp98\n#endif\nreturn 0;}",
			"GNU": Map(normal: "-std=gnu++98", strict: "-std=c++98"),
			"Clang": Map(normal: "-std=gnu++98", strict: "-std=c++98"),
			"MSVC": Map(normal: "", strict: "")
		),
		"11": Map(
			test: "#include<vector>\nint main(){std::vector<int>v={1,2,3,4};for(int i:v)i++;return 0;}",
			"GNU": Map(normal: "-std=gnu++0x", strict: "-std=c++0x"),
			"Clang": Map(normal: "-std=gnu++0x", strict: "-std=c++0x"),
			"MSVC": Map(normal: "", strict: "")
		)
	)
);
